- name: Playbook
  hosts: servers
  become: yes
  become_user: root
  tasks:
    - name: Update CASSANDRA config
      lineinfile:
        path: /etc/cassandra/conf/cassandra.yaml
        regexp: "{{ item.key | regex_escape() }}:"
        line: "{{ item.key }}: {{ item.value }}"
        backup: yes
      with_dict:
        'listen_address': "{{ hostvars[inventory_hostname]['ansible_env'].SSH_CONNECTION.split(' ')[2] }}"
        '    - seeds': "{{ hostvars[groups['servers'][0]].ansible_host }}"
        'start_rpc': 'start_rpc: true'
        'rpc_address': "{{ hostvars[inventory_hostname]['ansible_env'].SSH_CONNECTION.split(' ')[2] }}"
      become: yes
      become_user: root
    - name: Update CASSANDRA env
      lineinfile:
        path: /etc/cassandra/conf/cassandra-env.sh
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backup: yes
      with_items:
        - { regexp: '^MAX_HEAP_SIZE', line: '#MAX_HEAP_SIZE' }
        - { regexp: '^HEAP_NEWSIZE', line: '#HEAP_NEWSIZE' }
        - { regexp: '^LOCAL_JMX=yes', line: 'LOCAL_JMX=no' }
      become: yes
      become_user: root
    
    #- name: Update CASSANDRA env (part 2)
    #  lineinfile:
    #    path: /etc/cassandra/conf/cassandra-env.sh
    #    regexp: "^#? *{{ item.key | regex_escape() }}="   
        state: started
    - name: Open ports
      firewalld:
        port: "{{ item }}"
        permanent: yes
        state: enabled
        zone: public
        immediate: yes
      loop:
        - 7000/tcp
        - 9042/tcp
        - 7199/tcp
        #- 9160/tcp
    - name: restart CASSANDRA
      systemd:
        name: cassandra
        state: restarted
    - name: Make sure cassandra is started
      systemd:
        name: cassandra.service
        state: started